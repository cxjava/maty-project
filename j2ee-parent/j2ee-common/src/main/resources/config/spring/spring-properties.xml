<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
	<bean class="com.maty.j2ee.common.springmvc.SpringContextHolder" lazy-init="false" />
	
	<!-- service层的属性和配置文件读入 ,多个用逗号隔开 -->
	<!-- <context:property-placeholder location="classpath:/config/mybatis/jdbc.properties,classpath:/config/others/config.properties" /> -->
	<!-- 应用属性文件读入 -->
	<bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath:/config/others/config.properties</value>
				<value>classpath:/config/mybatis/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 用于持有applicationProperties,将properties转变为静态方法使用,PropertiesHolder.getProperty("somekey") -->
	<bean class="com.maty.j2ee.common.utils.PropertiesHolder">
		<property name="properties" ref="applicationProperties" />
	</bean>

	<!-- PropertyPlaceholderConfigurer,用于spring ${placeholder}的解析 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="properties" ref="applicationProperties" />
	</bean>

</beans>